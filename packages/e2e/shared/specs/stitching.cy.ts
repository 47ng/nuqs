import { createTest } from '../create-test'

export const testStitching = createTest('Stitching', ({ path }) => {
  it('should update the state optimistically and sequence the URL updates', () => {
    cy.visit(path)
    cy.contains('#hydration-marker', 'hydrated').should('be.hidden')
    cy.get('button').click()
    cy.get('#client-a').should('have.text', '1')
    cy.get('#client-b').should('have.text', '1')
    cy.get('#client-c').should('have.text', '1')
    cy.location('search').should('equal', '?a=1')
    cy.location('search').should('equal', '?a=1&b=1')
    cy.location('search').should('equal', '?a=1&b=1&c=1')
    cy.get('button').click()
    cy.get('#client-a').should('have.text', '2')
    cy.get('#client-b').should('have.text', '2')
    cy.get('#client-c').should('have.text', '2')
    cy.location('search').should('equal', '?a=2&b=1&c=1')
    cy.location('search').should('equal', '?a=2&b=2&c=1')
    cy.location('search').should('equal', '?a=2&b=2&c=2')
    cy.get('button').click()
    cy.get('#client-a').should('have.text', '3')
    cy.get('#client-b').should('have.text', '3')
    cy.get('#client-c').should('have.text', '3')
    cy.location('search').should('equal', '?a=3&b=2&c=2')
    // Don't wait till completion, queue an update before the debounced resolve
    cy.get('button').click()
    cy.get('#client-a').should('have.text', '4')
    cy.get('#client-b').should('have.text', '4')
    cy.get('#client-c').should('have.text', '4')
    cy.location('search').should('equal', '?a=4&b=2&c=2')
    cy.location('search').should('equal', '?a=4&b=4&c=4')
    cy.location('search').should('equal', '?a=4&b=4&c=4')
  })
})
